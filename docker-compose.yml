networks:
  taskify_network:
    driver: bridge
    name: taskify_network
    external: false

services:
  postgres:
    image: postgres:latest
    container_name: taskify_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - taskify_network
  adminer:
    image: adminer:latest
    container_name: taskify_adminer
    ports:
      - "${ADMINER_PORT}:${ADMINER_PORT}"
    environment:
      ADMINER_DEFAULT_SERVER: ${ADMINER_DEFAULT_SERVER}
      ADMINER_DEFAULT_DB_DRIVER: ${ADMINER_DEFAULT_DB_DRIVER}
      ADMINER_DEFAULT_DB_NAME: ${POSTGRES_DB}
      ADMINER_DEFAULT_USERNAME: ${POSTGRES_USER}
      ADMINER_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    networks:
      - taskify_network
  migrate-up:
    image: migrate/migrate:latest
    profiles:
      - migration
    command: 
      [
        "-path", 
        "/sql",
        "-database", 
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@taskify_postgres:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable", 
        "up",
      ]
    depends_on:
      - postgres
    volumes:
      - ./migrations/sql:/sql
    networks:
      - taskify_network
  migrate-down:
    image: migrate/migrate:latest
    profiles:
      - migration
    command: 
      [
        "-path", 
        "/sql",
        "-database", 
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@taskify_postgres:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable", 
        "down",
      ]
    depends_on:
      - postgres
    volumes:
      - ./migrations/sql:/sql
    networks:
      - taskify_network

volumes:
  postgres_data:
    driver: local